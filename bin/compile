#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

JVM_COMMON_BUILDPACK=http://lang-jvm.s3.amazonaws.com/jvm-buildpack-common-v7.tar.gz
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

export_env_dir $ENV_DIR

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# create default system.properties
if [ ! -f ${BUILD_DIR}/system.properties ]; then
  echo "java.runtime.version=1.7" > ${BUILD_DIR}/system.properties
fi

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
echo -n "-----> Installing OpenJDK ${javaVersion}..."
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
echo "done"

# get sbt from sbt-extras
mkdir -p ~/.sbt/bin
curl -s https://raw.githubusercontent.com/paulp/sbt-extras/master/sbt > ~/.sbt/bin/sbt

# make it executable
chmod 0755 ~/.sbt/bin/sbt

# put sbt in the PATH
export PATH=~/.sbt/bin:$PATH

# chdir as sbt expects
cd $BUILD_DIR

# update dependencies for the app
sbt -v update

# if there is not a target, build it
echo `ls $BUILD_DIR/target`
if [ ! -e $BUILD_DIR/target ]; then
  sbt -v stage
fi
